name: Android CI

on:
  push:
    branches: [ "main" ]
    paths:
    - android/**
    
  pull_request:
    branches: [ "main" ]
    paths:
    - android/**

  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: source submodules
      run: git submodule update --init 

    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: rust deps
      run: cargo install cargo-ndk@3.4.0 --locked
    - name: rust targets
      run: rustup target add aarch64-linux-android armv7-linux-androideabi
    - name: rust cache
      uses: actions/cache@v4.0.2
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          rust/target/
        # An explicit key for restoring and saving the cache
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        # Run the post step to save the cache even if another step before fail
        save-always: true

    # - name: Fix ndk version
    #   # As of this commit day ANDROID_NDK_LATEST_HOME=/usr/local/lib/android/sdk/ndk/26.3.11579264
    #   # We just want the ndk to be v26 for agp 8.5 / gradle 8.7
    #   run: |
    #     echo "ANDROID_NDK_HOME=" >> "$GITHUB_ENV" && \
    #     echo "ANDROID_NDK_ROOT=" >> "$GITHUB_ENV" && \
    #     echo "ANDROID_NDK=" >> "$GITHUB_ENV"
    - run: mkdir -p /opt
    - run: wget -q https://dl.google.com/android/repository/android-ndk-r23c-linux.zip && unzip android-ndk-r23c-linux.zip -d /opt
    - name: gradle cargoNDK plugin needs this file for some reason
      run: touch android/local.properties
    - run: echo "ndk.dir=/android-ndk-r23c" > android/local.properties
      

    - name: Grant execute permission for gradlew
      working-directory: android/
      run: chmod +x gradlew
    - name: Build with Gradle
      working-directory: android/
      run: ./gradlew build

    - name: Upload Build Artifacts (unsigned Apks)
      uses: actions/upload-artifact@v4.3.4
      with:
        # Artifact name
        name: BuiltApks-${{ github.sha }}
        # A file, directory or wildcard pattern that describes what to upload
        path: android/app/build/outputs/apk/**/release/**
        # The level of compression for Zlib to be applied to the artifact archive. The value can range from 0 to 9: - 0: No compression - 1: Best speed - 6: Default compression (same as GNU Gzip) - 9: Best compression Higher levels will result in better compression, but will take longer to complete. For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.
        #compression-level: # optional, default is 6
        # If true, an artifact with a matching name will be deleted before a new one is uploaded. If false, the action will fail if an artifact for the given name already exists. Does not fail if the artifact does not exist.
        #overwrite: # optional, default is false
              
